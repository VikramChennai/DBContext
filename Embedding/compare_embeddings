import numpy as np
from sklearn.metrics.pairwise import cosine_similarity

# Load the saved column embeddings
column_embeddings = np.load('column_embeddings.npy', allow_pickle=True).item()

# Function to get embeddings for new data
def get_new_embedding(text):
    # Convert to list if it's not already
    if not isinstance(text, list):
        text = [text]
    return get_embeddings(text).numpy()

# Function to compare new embedding with column embeddings
def compare_embeddings(new_embedding, column_embeddings):
    similarities = {}
    for column, embeddings in column_embeddings.items():
        # Calculate mean embedding for the column
        mean_embedding = np.mean(embeddings.numpy(), axis=0)
        # Calculate cosine similarity
        similarity = cosine_similarity(new_embedding, mean_embedding.reshape(1, -1))[0][0]
        similarities[column] = similarity
    return similarities

# Example usage
new_data = "Your new text data here"
new_embedding = get_new_embedding(new_data)

similarities = compare_embeddings(new_embedding, column_embeddings)

# Print similarities
for column, similarity in similarities.items():
    print(f"Similarity with '{column}': {similarity:.4f}")

# Find the most similar column
most_similar_column = max(similarities, key=similarities.get)
print(f"\nMost similar column: '{most_similar_column}' with similarity {similarities[most_similar_column]:.4f}")